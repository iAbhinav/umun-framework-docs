{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Umun Framework Creates cross-platform full-stack apps at lightening fast speed. Introduction Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac finibus ante. Aenean eleifend nibh quis dolor vehicula, nec tincidunt sem gravida. Cras tincidunt augue in massa consectetur tristique. Sed velit nisl, venenatis eu interdum vel, porta ac mi. Curabitur erat mi, lobortis vitae dui et, mollis dignissim magna. Nunc ullamcorper leo lorem, vel pharetra turpis mollis in. Interdum et malesuada fames ac ante ipsum primis in faucibus. Documentation Get started with Umun Framework, learn the fundamentals and explore advanced topics on our documentation website. Getting Started CLI Architecture Entities Components and Templates API Theme Advanced Development Setup Prerequisites Install Node.js 14 or higher, which includes Node Package Manager $node --version v14.17.0 Install Java SDK v1.8 or higher. $java -version java version \"1.8.0_231\" Java(TM) SE Runtime Environment (build 1.8.0_231-b11) Java HotSpot(TM) 64-Bit Server VM (build 25.231-b11, mixed mode) Setting up a new project Install the Umun CLI globally npm i -g @umun-tech/umun-cli Create Workspace umun start [PROJECT NAME] Run the application cd [PROJECT NAME] umun serve Modules v0.8.0 [x] Core [x] Entity [x] Form [x] iAM [x] Image [x] Notification [x] Organization [x] Socket [x] System [x] Tool v1.0.0 * [ ] Accounting * [ ] Actor * [ ] Item * [ ] Order * [ ] * [ ] Application Showcase Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac finibus ante. Aenean eleifend nibh quis dolor vehicula, nec tincidunt sem gravida. Cras tincidunt augue in massa consectetur tristique. Inhouse External Templates Philosophy Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac finibus ante. Aenean eleifend nibh quis dolor vehicula, nec tincidunt sem gravida. Cras tincidunt augue in massa consectetur tristique. Sed velit nisl, venenatis eu interdum vel, porta ac mi. Curabitur erat mi, lobortis vitae dui et, mollis dignissim magna. Nunc ullamcorper leo lorem, vel pharetra turpis mollis in. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vivamus at augue metus. Donec dictum magna justo, ut consectetur nulla bibendum eget. Praesent egestas odio justo, sed imperdiet neque efficitur ac. Duis id pretium nisl, in facilisis nibh. Sed condimentum metus ac lacus bibendum sodales. Aliquam at venenatis arcu. Aenean id mauris a risus consequat tincidunt ut non elit. Nunc nec dui et ante venenatis dictum. Adding fulfilment to full stack development since 2017.","title":"Umun Framework"},{"location":"#umun-framework","text":"Creates cross-platform full-stack apps at lightening fast speed.","title":"Umun Framework"},{"location":"#introduction","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac finibus ante. Aenean eleifend nibh quis dolor vehicula, nec tincidunt sem gravida. Cras tincidunt augue in massa consectetur tristique. Sed velit nisl, venenatis eu interdum vel, porta ac mi. Curabitur erat mi, lobortis vitae dui et, mollis dignissim magna. Nunc ullamcorper leo lorem, vel pharetra turpis mollis in. Interdum et malesuada fames ac ante ipsum primis in faucibus.","title":"Introduction"},{"location":"#documentation","text":"Get started with Umun Framework, learn the fundamentals and explore advanced topics on our documentation website. Getting Started CLI Architecture Entities Components and Templates API Theme","title":"Documentation"},{"location":"#advanced","text":"","title":"Advanced"},{"location":"#development-setup","text":"","title":"Development Setup"},{"location":"#prerequisites","text":"Install Node.js 14 or higher, which includes Node Package Manager $node --version v14.17.0 Install Java SDK v1.8 or higher. $java -version java version \"1.8.0_231\" Java(TM) SE Runtime Environment (build 1.8.0_231-b11) Java HotSpot(TM) 64-Bit Server VM (build 25.231-b11, mixed mode)","title":"Prerequisites"},{"location":"#setting-up-a-new-project","text":"Install the Umun CLI globally npm i -g @umun-tech/umun-cli Create Workspace umun start [PROJECT NAME] Run the application cd [PROJECT NAME] umun serve","title":"Setting up a new project"},{"location":"#modules","text":"v0.8.0 [x] Core [x] Entity [x] Form [x] iAM [x] Image [x] Notification [x] Organization [x] Socket [x] System [x] Tool v1.0.0 * [ ] Accounting * [ ] Actor * [ ] Item * [ ] Order * [ ] * [ ]","title":"Modules"},{"location":"#application-showcase","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac finibus ante. Aenean eleifend nibh quis dolor vehicula, nec tincidunt sem gravida. Cras tincidunt augue in massa consectetur tristique. Inhouse External Templates","title":"Application Showcase"},{"location":"#philosophy","text":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer ac finibus ante. Aenean eleifend nibh quis dolor vehicula, nec tincidunt sem gravida. Cras tincidunt augue in massa consectetur tristique. Sed velit nisl, venenatis eu interdum vel, porta ac mi. Curabitur erat mi, lobortis vitae dui et, mollis dignissim magna. Nunc ullamcorper leo lorem, vel pharetra turpis mollis in. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vivamus at augue metus. Donec dictum magna justo, ut consectetur nulla bibendum eget. Praesent egestas odio justo, sed imperdiet neque efficitur ac. Duis id pretium nisl, in facilisis nibh. Sed condimentum metus ac lacus bibendum sodales. Aliquam at venenatis arcu. Aenean id mauris a risus consequat tincidunt ut non elit. Nunc nec dui et ante venenatis dictum. Adding fulfilment to full stack development since 2017.","title":"Philosophy"},{"location":"cli/","text":"Umun CLI The Umun CLI is a command-line interface tool that you use to initialize, develop, scaffold, and maintain Umun Framework applications directly from a command shell. Installing Umun CLI Prerequisites Install Node.js 14 or higher, which includes Node Package Manager Install Java SDK v1.8 or higher. Install Major versions of Umun CLI follow the supported major version of Umun, but minor versions can be released separately. Install the CLI using the npm package manager: npm i -g @umun-tech/umun-cli Umun Framework creates cross-platform full-stack apps at lightening fast speed. Basic Workflow Invoke the tool on the command line through the umun or u executable. umun --help umun --version You may invoke the above commands using u --help or u --version as well To create, build, and serve a new, basic Umun project on a development server, go to the parent directory of your new workspace use the following commands: umun start project-umun cd project-umun umun serve In your browser, open http://localhost:4200/ to see the new application run. When you use the ng serve command to build an application and serve it locally, the server automatically rebuilds the application and reloads the page when you change any of the source files. While your app is served on port 4200, Umun REST APIs are served on http://localhost:8080/ When you run umun start project-umun a new folder, named project-umun, will be created in the current working directory. Since you want to be able to create files inside that folder, make sure you have sufficient rights in the current working directory before running the command. If the current working directory is not the right place for your project, you can change to a more appropriate directory by running cd <path-to-other-directory> . Workspace and Project Files The umun start command creates a Umun workspace folder and generates a new project skeleton. graph TB Root[New Umun Project]-->|Angular|App Root-->|Springboot|Server Root-->|Mkdocs|Docs Root-->umun.config.json Workspace Folder Languages Framework Description App TypeScript Nx , Angular Workspace for the front end application Server Java SpringBoot Workspace for the back-end. Docs Markdown Mkdocs Store documentation for your project here. Config JSON Configuration of your umun project. Project configuration A single workspace configuration file, umun.config.json , is created at the top level of the workspace. This is where you can set per-project defaults for CLI command options, and specify configurations to use when the CLI builds a project for different targets. See more about Project Configuration Command Overview Command Alias Description start s Creates a new Umun Project serve Serves Umun Project on https://localhost:4200 and http://localhost:8080 add Adds Umun Modules to the Project. generate Generates entities and other components. build Builds the frontend and backend to required deployables.","title":"Umun CLI"},{"location":"cli/#umun-cli","text":"The Umun CLI is a command-line interface tool that you use to initialize, develop, scaffold, and maintain Umun Framework applications directly from a command shell.","title":"Umun CLI"},{"location":"cli/#installing-umun-cli","text":"","title":"Installing Umun CLI"},{"location":"cli/#prerequisites","text":"Install Node.js 14 or higher, which includes Node Package Manager Install Java SDK v1.8 or higher.","title":"Prerequisites"},{"location":"cli/#install","text":"Major versions of Umun CLI follow the supported major version of Umun, but minor versions can be released separately. Install the CLI using the npm package manager: npm i -g @umun-tech/umun-cli Umun Framework creates cross-platform full-stack apps at lightening fast speed.","title":"Install"},{"location":"cli/#basic-workflow","text":"Invoke the tool on the command line through the umun or u executable. umun --help umun --version You may invoke the above commands using u --help or u --version as well To create, build, and serve a new, basic Umun project on a development server, go to the parent directory of your new workspace use the following commands: umun start project-umun cd project-umun umun serve In your browser, open http://localhost:4200/ to see the new application run. When you use the ng serve command to build an application and serve it locally, the server automatically rebuilds the application and reloads the page when you change any of the source files. While your app is served on port 4200, Umun REST APIs are served on http://localhost:8080/ When you run umun start project-umun a new folder, named project-umun, will be created in the current working directory. Since you want to be able to create files inside that folder, make sure you have sufficient rights in the current working directory before running the command. If the current working directory is not the right place for your project, you can change to a more appropriate directory by running cd <path-to-other-directory> .","title":"Basic Workflow"},{"location":"cli/#workspace-and-project-files","text":"The umun start command creates a Umun workspace folder and generates a new project skeleton. graph TB Root[New Umun Project]-->|Angular|App Root-->|Springboot|Server Root-->|Mkdocs|Docs Root-->umun.config.json","title":"Workspace and Project Files"},{"location":"cli/#workspace","text":"Folder Languages Framework Description App TypeScript Nx , Angular Workspace for the front end application Server Java SpringBoot Workspace for the back-end. Docs Markdown Mkdocs Store documentation for your project here. Config JSON Configuration of your umun project.","title":"Workspace"},{"location":"cli/#project-configuration","text":"A single workspace configuration file, umun.config.json , is created at the top level of the workspace. This is where you can set per-project defaults for CLI command options, and specify configurations to use when the CLI builds a project for different targets. See more about Project Configuration","title":"Project configuration"},{"location":"cli/#command-overview","text":"Command Alias Description start s Creates a new Umun Project serve Serves Umun Project on https://localhost:4200 and http://localhost:8080 add Adds Umun Modules to the Project. generate Generates entities and other components. build Builds the frontend and backend to required deployables.","title":"Command Overview"},{"location":"cli/add/","text":"","title":"Index"},{"location":"cli/build/","text":"","title":"Index"},{"location":"cli/generate/","text":"","title":"Index"},{"location":"cli/package/","text":"","title":"Index"},{"location":"cli/serve/","text":"","title":"Index"},{"location":"cli/start/","text":"Umun Start Creates a new Umun Project Workspace. umun start [PROJECT NAME] u s [PROJECT NAME] Arguments Argument Datatype Description name string The name of the new workspace and initial project. Options Option Datatype Default Description --app boolean true --server boolean true --package, -p string com.umun.starter --type string basic --prefix string basic","title":"Umun Start"},{"location":"cli/start/#umun-start","text":"Creates a new Umun Project Workspace. umun start [PROJECT NAME] u s [PROJECT NAME]","title":"Umun Start"},{"location":"cli/start/#arguments","text":"Argument Datatype Description name string The name of the new workspace and initial project.","title":"Arguments"},{"location":"cli/start/#options","text":"Option Datatype Default Description --app boolean true --server boolean true --package, -p string com.umun.starter --type string basic --prefix string basic","title":"Options"},{"location":"framework/app/","text":"","title":"Index"},{"location":"framework/configuration/","text":"","title":"Index"},{"location":"framework/docs/","text":"","title":"Index"},{"location":"framework/server/","text":"","title":"Index"},{"location":"theme/","text":"Theme Umun Framework provides several global variables that are used throughout components to change the default theme of an entire application. Application Colors are useful to change the look of most of the Ionic components, and Stepped Colors are used as variations in some of the Ionic components. Read more on colors & theme here . Getting Started Color codes and their elements","title":"Theme"},{"location":"theme/#theme","text":"Umun Framework provides several global variables that are used throughout components to change the default theme of an entire application. Application Colors are useful to change the look of most of the Ionic components, and Stepped Colors are used as variations in some of the Ionic components. Read more on colors & theme here .","title":"Theme"},{"location":"theme/#getting-started","text":"Color codes and their elements","title":"Getting Started"},{"location":"theme/codes%20and%20elements/","text":"Color codes and their elements Analysis by Prakrati Arya in June,2022. To avoid confusion while theme building, I created have created this document in which I have put the screenshots of all the elements belonging to one particular colour code. Red colour is assigned to each colour code one by one depending upon which colour elements we are defining and the rest are kept white. For example, when defining the elements of primary color code, it will be kept red whereas the rest will be either whitish or greyish. Let\u2019s get started! Primary Color At first, I have chosen primary colour code which means it will be red and will help us identify all the elements that get affected when we alter the primary colour code. root { --ion-color-primary: _ #ff0000; --ion-color-primary-rgb: 255, 0, 0; -ion-color-primary-contrast: O #ffffff; -ion-color-primary-contrast-rgb: 255, 255, 255; -ion-color-primary-shade: #e00000; -ion-color-primary-tint: #fflala; } Effect","title":"Color codes and their elements"},{"location":"theme/codes%20and%20elements/#color-codes-and-their-elements","text":"Analysis by Prakrati Arya in June,2022. To avoid confusion while theme building, I created have created this document in which I have put the screenshots of all the elements belonging to one particular colour code. Red colour is assigned to each colour code one by one depending upon which colour elements we are defining and the rest are kept white. For example, when defining the elements of primary color code, it will be kept red whereas the rest will be either whitish or greyish. Let\u2019s get started!","title":"Color codes and their elements"},{"location":"theme/codes%20and%20elements/#primary-color","text":"At first, I have chosen primary colour code which means it will be red and will help us identify all the elements that get affected when we alter the primary colour code. root { --ion-color-primary: _ #ff0000; --ion-color-primary-rgb: 255, 0, 0; -ion-color-primary-contrast: O #ffffff; -ion-color-primary-contrast-rgb: 255, 255, 255; -ion-color-primary-shade: #e00000; -ion-color-primary-tint: #fflala; }","title":"Primary Color"},{"location":"theme/codes%20and%20elements/#effect","text":"","title":"Effect"}]}